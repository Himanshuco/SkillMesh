skillswap/
├── client/                     # Frontend (EJS now, React later)
│   ├── public/                 # Static files (CSS, images, client-side JS)
│   │   ├── css/
│   │   └── js/
│   └── views/                  # EJS templates
│       ├── partials/           # Header, footer, etc.
│       ├── auth/               # Login, register pages
│       ├── skills/             # Skill listings, details, create form
│       └── error.ejs
│
├── server/                     # Backend logic
│   ├── config/                 # DB connection
│   │   └── db.js
│   ├── controllers/            # Logic for routes
│   │   ├── authController.js
│   │   └── skillController.js
│   ├── middlewares/           # Auth, error handlers, etc.
│   │   └── authMiddleware.js
│   ├── models/                 # Mongoose models
│   │   ├── User.js
│   │   └── Skill.js
│   ├── routes/                 # API and view routes
│   │   ├── authRoutes.js
│   │   └── skillRoutes.js
│   └── server.js               # Entry point to start Express server
│
├── .env                        # Environment variables
├── .gitignore
├── package.json                # For root-level scripts or monorepo tools (optional)
└── README.md 

io.on("connection", socket => {
  const userId = socket.request.session?.passport?.user;

  console.log("User connected to socket:", userId || "Unknown");

  socket.on("joinRoom", ({ senderId, recipientId }) => {
    if (!senderId || !recipientId) {
      console.log("Missing senderId or recipientId!");
      return;
    }

    const roomId = [senderId, recipientId].sort().join("_");
    socket.join(roomId);
    socket.roomId = roomId;
    console.log(`User ${senderId} joined room ${roomId}`);
  });

  socket.on("chatMessage", async ({ recipientId, content }) => {
    const senderId = socket.request.session?.passport?.user;

    if (!senderId || !recipientId || !content) {
      console.log("Missing data in chatMessage");
      return;
    }

    const roomId = [senderId, recipientId].sort().join("_");

    const msg = await Message.create({
      sender: senderId,
      recipient: recipientId,
      roomId,
      content
    });

    io.to(roomId).emit("chatMessage", {
      senderName: "You", // optionally fetch sender name
      content: msg.content
    });
  });

  socket.on("disconnect", () => {
    console.log(`User ${userId || "Unknown"} disconnected`);
  });
});



Suggested Features to Add :

A. Skill Exchange & Matching
Skill Requests: Users can post detailed requests for help.

Skill Offers: Users can browse available helpers.

Matching System: Automatic or manual matching between users needing help and those offering skills.

Request & Offer Status: Track ongoing exchanges (pending, in progress, completed).

B. Project & Team Management
Create Project: Detailed form to create skill exchange projects or teams.

Join Teams: Users can browse and join existing teams/projects.

Team Chat/Forum: Communication tools for team members.

Project Progress Tracking: Task lists, milestones.

C. Time Credit Management
Credit Transactions: View detailed history of earned/spent time credits.

Credit Transfer: Allow users to transfer credits to each other.

Credit Limits or Expiry: To manage the economy.

D. Notifications & Messaging
User Notifications: Alerts for new matches, project invites, messages.

Direct Messaging: Chat between users for coordination.

E. Enhanced Profile
Portfolio/Work Samples: Upload examples or links.

Ratings & Reviews: Feedback system for skill exchanges.

Skill Endorsements: Like LinkedIn endorsements for skills.

F. Admin Dashboard
User Management: Approve new users or moderate content.

Reports & Analytics: Track platform usage, popular skills.

G. Mobile Responsiveness & UX Enhancements
Make sure all pages are mobile-friendly.

Add progress bars, tooltips, and validations.

H. Social Login Integration
Allow signup/login with Google, Facebook, etc.

I. Search & Filtering
Search skills, users, and projects with filters (location, skill category, availability).



Full User Flow Scenario :
User signs up and logs in.

On dashboard, they add skills they can offer and skills they want.

User posts a project requiring collaboration.

Other users find the project and join the team.

They exchange help, and time credits are allocated automatically.

Users leave feedback and update profiles.

Users can then spend credits to get help with their requested skills or join other projects.


| Feature        | Enhancement Idea                                                |
| -------------- | --------------------------------------------------------------- |
| Credits        | Add levels, leaderboards, rewards                               |
| Projects       | Let users showcase projects like a portfolio                    |
| Sessions       | Add review/ratings after sessions                               |
| Community      | Add forums or chat for collaboration                            |
| Matching       | Use smart filters/tags for matching by goal, tech, availability |
| Gamification   | Badges for first session, 5 stars, 10 credits earned, etc.      |
| Mobile-ready   | Create a clean, simple mobile interface                         |
| AI integration | AI skill suggestion or profile builder                          |



style.css

/* === Reset & Base Styles === */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Include padding and border in element's total width and height */
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(to bottom, #2A6FDB, #B3D7FF); /* Blue gradient background */
  color: #fff;
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* Ensure body fills viewport height */
}

/* === NAVBAR === */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: transparent; /* Transparent to blend with background */
  padding: 1rem 3rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 1000; /* Stay on top */
  box-shadow: none;
  border: none;
}

/* Logo styling */
.logo {
  font-size: 1.8rem;
  font-weight: bold;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.logo a {
  text-decoration: none;
  color: white; /* Primary brand color */
  letter-spacing: 1px;
  transition: color 0.3s ease;
}

/* Logo hover color */
.logo a:hover {
  color: #5F0FFF; /* Accent highlight */
}

/* First letter of logo gets accent color and larger font size */
.logo a::first-letter {
  color: #F72585;
  font-size: 2rem;
}

/* Navigation links container */
.nav-links {
  list-style: none;
  display: flex;
  gap: 2rem;
  align-items: center;
}

/* Navigation links styling */
.nav-links a {
  text-decoration: none;
  color: white;
  font-weight: 500;
  font-size: 1rem;
  transition: 0.2s;
}

/* Link hover effect */
.nav-links a:hover {
  color: #e3f2fd;
}

/* Button style for "Get Started" */
.get-started-btn {
  margin-top: 2rem;
  background-color: #002984;
  color: white !important;
  padding: 0.6rem 1.2rem;
  border-radius: 100px; /* Pill shape */
  font-weight: 500;
  text-decoration: none;
}

/* Logout button styled as link */
.logout-btn {
  background: none;
  border: none;
  color: white;
  font: inherit;
  cursor: pointer;
  padding: 0;
  margin: 0;
  text-decoration: none;
  font-size: 1rem;
}

/* === HERO SECTION === */
.hero-section {
  background-color: #2A6FDB;
  padding: 6rem 2rem 4rem 2rem;
  text-align: center;
  color: white;
  position: relative;
  padding-top: 120px; /* Space for fixed navbar */
  z-index: 3;
}

.main-content {
  flex: 1;
}

/* Hero headline */
.headline {
  font-size: 3rem;
  font-weight: bold;
  line-height: 1.3;
  margin-bottom: 1.2rem;
}

/* Subtext below headline */
.subtext {
  font-size: 1.2rem;
  margin-bottom: 2.5rem;
  max-width: 700px;
  margin-inline: auto;
  color: white;
}

.subtext span {
  font-weight: bold;
}

/* Primary button in hero */
.primary-button {
  background-color: #002984;
  color: white;
  padding: 0.9rem 2.2rem;
  font-size: 1.1rem;
  border: none;
  border-radius: 100px;
  cursor: pointer;
  transition: 0.2s ease-in-out;
  margin-bottom: 5rem;
}

.primary-button:hover {
  background-color: #001a66;
}

/* === CARDS WRAPPER === */
.cards-wrapper {
  position: relative;
  max-width: 900px;
  margin: -100px auto 0 auto; /* Negative margin to overlap hero section */
  z-index: 5;
  display: flex;
  justify-content: center;
  gap: 2rem;
  padding: 0 1rem;
}

/* Cards container - flexbox layout */
.cards-container {
  display: flex;
  gap: 2rem;
  justify-content: center;
  width: 100%;
}

/* Individual card styling */
.card {
  background-color: #ffffff;
  padding: 2rem 1.5rem;
  border-radius: 1.2rem;
  width: 280px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
  text-align: center;
  transition: transform 0.3s ease;
  color: #000;
}

/* Card hover effect lifts the card */
.card:hover {
  transform: translateY(-6px);
}

/* Card headings */
.card h2 {
  font-size: 1.3rem;
  font-weight: 600;
  margin-bottom: 0.8rem;
}

/* Card paragraph text */
.card p {
  font-size: 0.95rem;
  color: #333;
}

/* === WAVE CONTAINER === */
.wave-container {
  background-color: #ffffff;
  height: 150px; 
  border-top-left-radius: 100% 60px;
  border-top-right-radius: 100% 60px;
  margin-top: -100px; /* Pull up to overlap cards */
  position: relative;
  box-shadow: 0 -2px 20px rgba(0, 0, 0, 0.05);
  z-index: 2;
}

/* === FOOTER === */
.footer {
  background-color: #002984;
  color: #fff;
  text-align: center;
  padding: 1rem;
  margin-top: auto; /* Stick footer at bottom */
}

/* === FORM STYLES === */
.form-container {
  background-color: #ffffffcc; /* Slightly transparent white */
  max-width: 400px;
  margin: 6rem auto 3rem;
  padding: 2rem 2.5rem;
  border-radius: 12px;
  color: #000;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
}

.form-container h1 {
  text-align: center;
  margin-bottom: 1.8rem;
  color: #002984;
}

.auth-form {
  display: flex;
  flex-direction: column;
}

.auth-form label {
  margin-bottom: 0.5rem;
  font-weight: 600;
}

.auth-form input,
.auth-form select {
  padding: 0.6rem 1rem;
  border-radius: 8px;
  border: 1px solid #ccc;
  margin-bottom: 1.3rem;
  font-size: 1rem;
  outline: none;
  transition: border-color 0.2s;
}

.auth-form input:focus,
.auth-form select:focus {
  border-color: #002984; /* Blue focus border */
}

/* Primary button for forms */
.primary-button {
  background-color: #002984;
  color: white;
  padding: 0.9rem 2.2rem;
  font-size: 1.1rem;
  border: none;
  border-radius: 100px;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
  margin-top: 0.5rem;
}

.primary-button:hover {
  background-color: #001a66;
}

/* Footer text for forms with links */
.form-footer-text {
  margin-top: 1.5rem;
  text-align: center;
  font-size: 0.9rem;
}

.form-footer-text a {
  color: #002984;
  text-decoration: none;
  font-weight: 600;
}

.form-footer-text a:hover {
  text-decoration: underline;
}

/* Responsive form adjustments for small screens */
@media (max-width: 480px) {
  .form-container {
    margin: 4rem 1rem 2rem;
    padding: 1.5rem 1.5rem;
    width: auto;
  }
}

/* === DASHBOARD STYLES === */
.container {
  padding: 3rem 2rem;
  max-width: 1000px;
  margin: 0 auto;
  font-family: 'Segoe UI', sans-serif;
}

h1 {
  font-size: 2.2rem;
  margin-bottom: 0.5rem;
  color: #222;
}

.subtitle {
  font-size: 1.1rem;
  margin-bottom: 2rem;
  color: #555;
}

/* Cards grid layout on dashboard */
.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2.5rem;
}

.card {
  background-color: #ffffff;
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.07);
}

.card h2 {
  font-size: 1.2rem;
  margin-bottom: 0.75rem;
  color: #333;
}

.card p,
.card ul,
.card li {
  font-size: 0.95rem;
  color: #555;
  line-height: 1.5;
}

.card ul {
  padding-left: 1.2rem;
  list-style: disc;
}

/* User info panel */
.user-info {
  background-color: #f9f9f9;
  padding: 1.5rem;
  border-radius: 0.75rem;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.05);
}

.user-info h3 {
  margin-bottom: 1rem;
  font-size: 1.15rem;
  color: #222;
  border-bottom: 2px solid #38bdf8; /* Blue underline */
  padding-bottom: 0.5rem;
}

.user-info p {
  margin-bottom: 0.6rem;
  font-size: 0.95rem;
  color: #444;
}

.user-info strong {
  color: #111;
}

/* === PROFILE PAGE STYLES === */
.profile-wrapper {
  display: flex;
  justify-content: center;
  margin: 4rem 1rem;
}

/* Profile card with dark background */
.profile-card-dark {
  display: flex;
  flex-wrap: wrap;
  background-color: #1e1e2f;
  color: white;
  border-radius: 10px;
  padding: 2rem;
  max-width: 900px;
  width: 100%;
  box-shadow: 0 8px 20px rgba(0,0,0,0.3);
}

/* Left section of profile card with avatar */
.profile-left {
  flex: 1 1 250px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
}

/* Large circular avatar */
.profile-avatar-large {
  width: 200px;
  height: 200px;
  object-fit: cover;
  border-radius: 50%;
  border: 4px solid white;
}

/* Right section with user info */
.profile-right {
  flex: 2 1 400px;
  padding-left: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-size: 1.1rem;
}

.profile-right h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.profile-right p {
  margin-bottom: 0.8rem;
  color: #ccc;
}

/* Highlight user info labels */
.profile-info-label {
  font-weight: bold;
  color: #82c0ff;
  margin-right: 0.5rem;
}

/* === MEDIA QUERIES === */

/* Stack cards vertically on very small screens */
@media (max-width: 550px) {
  .cards-wrapper,
  .cards-container {
    flex-direction: column;
    align-items: center;
  }
  
  .card {
    width: 90%;
  }
}

/* Stack profile sections on small screens */
@media (max-width: 768px) {
  .profile-card-dark {
    flex-direction: column;
    align-items: center;
  }

  .profile-right {
    padding-left: 0;
    margin-top: 1.5rem;
    text-align: center;
  }
}

/* Navbar padding adjustment on very small screens */
@media (max-width: 480px) {
  .navbar {
    padding: 0.7rem 1.2rem;
  }

  .headline {
    font-size: 2.3rem;
  }

  .subtext {
    font-size: 1rem;
    max-width: 95%;
  }
}
